<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from RPI_unlock.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="RPI_unlock" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>RPI_unlock</refname>
    <refpurpose>Function to synchronize variable updates from the main program to any threads running in the program</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   RPI_unlock(key)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>key:</term>
      <listitem><para> a number from 0 to 3 representing a 'key'</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
This function allows synchronising variable updates from main program to any threads running in the program. When another process tries to lock the same key, it will be stalled until the first process has unlocked the same key.
   </para>
   <para>
The function is necessary to ensure valid data retreiveal when exchanging data between the main program and a thread – otherwise it’s possible that the thread could wake-up halfway during data copy and change the data – so the data copied is incomplete, or invalid
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
PI_THREAD(myThread)
{
.. thread code
RPI_lock(0)
.. thread code continues
RPI_unlock(0)
}
   ]]></programlisting>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="RPI_lock,RPI_threadCreate">RPI_lock,RPI_threadCreate</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Jorawar Singh</member>
   </simplelist>
</refsection>

<refsection>
   <title>Bibliography</title>
   <para>http://wiringpi.com/reference/</para>
</refsection>
</refentry>
